# Application Configuration
micronaut.application.name=blog-post-manager
micronaut.server.port=${MICRONAUT_SERVER_PORT:8888}

# CORS Configuration for Frontend
micronaut.server.cors.enabled=true
micronaut.server.cors.configurations.web.allowedOrigins=http://localhost:3000,http://127.0.0.1:3000
micronaut.server.cors.configurations.web.allowedMethods=GET,POST,PUT,DELETE,OPTIONS
micronaut.server.cors.configurations.web.allowedHeaders=Content-Type,Authorization,X-Requested-With
micronaut.server.cors.configurations.web.allowCredentials=true
micronaut.server.cors.configurations.web.maxAge=3600

# PostgreSQL Database Configuration (Docker-ready)
datasources.default.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:blogdb}
datasources.default.driver-class-name=org.postgresql.Driver
datasources.default.username=${DB_USERNAME:postgres}
datasources.default.password=${DB_PASSWORD:postgres}
datasources.default.dialect=POSTGRES

# JPA/Hibernate Configuration
jpa.default.properties.hibernate.hbm2ddl.auto=update
jpa.default.properties.hibernate.show_sql=true
jpa.default.properties.hibernate.format_sql=true
jpa.default.entity-scan.packages=com.fintrellis.blogmanager

# Logging Configuration
logger.levels.com.fintrellis.blogmanager=DEBUG
logger.levels.io.micronaut.data=DEBUG

# Validation Configuration
micronaut.validation.enabled=true

# Health endpoint
endpoints.health.enabled=true
endpoints.health.sensitive=false
